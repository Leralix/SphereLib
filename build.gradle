plugins {
    id 'java'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "7.1.1"
}

group = 'org.leralix'
version = '0.3.0'

compileJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven { url = "https://plugins.gradle.org/m2/" }
    gradlePluginPortal()
}

dependencies {
    implementation 'org.jetbrains:annotations:24.0.0'
    compileOnly "org.spigotmc:spigot-api:1.20-R0.1-SNAPSHOT"
}

shadowJar {
    relocate 'org.bstats', 'org.leralix.lib'
    archiveClassifier.set('')
}

tasks {
    jar {
        enabled = false
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact tasks.shadowJar
        }
    }
    repositories {
        maven {
            name = "local"
            url = uri("$buildDir/repo") // RÃ©pertoire local pour tester
        }
    }

}

// Configuration pour Java 17
def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

// Traitement des ressources
processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset = 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
